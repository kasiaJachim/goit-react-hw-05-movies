{"version":3,"file":"static/js/924.75d261ec.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/movieList.module.css?ccba","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchMovie/searchMovie.module.css?5e92","components/SearchMovie/SearchMovie.jsx","pages/Movies.jsx","utils/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listOfMovies\":\"movieList_listOfMovies__STHBQ\",\"card\":\"movieList_card__Nr0BI\",\"title\":\"movieList_title__Jbv61\",\"noImg\":\"movieList_noImg__b-QXZ\"};","import { useLocation, Link } from 'react-router-dom';\nimport css from './movieList.module.css';\nimport noMovieImg from 'img/no-poster-available.jpg';\n\nfunction MovieList({ movies }) {\n  const location = useLocation();\n  console.log(movies);\n\n  return (\n    <ul className={css.listOfMovies}>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <div className={css.card}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <div className={css.imgWrap}>\n                  {movie.poster_path ? (\n                    <img\n                      className={css.img}\n                      alt={movie.original_title}\n                      src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    />\n                  ) : (\n                    <img\n                      className={css.noImg}\n                      src={noMovieImg}\n                      alt=\"not available\"\n                    />\n                  )}\n                </div>\n                <p className={css.title}>{movie.title}</p>\n              </Link>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"searchMovie_searchbar__SyVLd\",\"searchForm\":\"searchMovie_searchForm__9ZABJ\",\"searchFormButton\":\"searchMovie_searchFormButton__LVXAs\",\"searchFormInput\":\"searchMovie_searchFormInput__BA+DJ\"};","import { useState} from 'react';\nimport css from './searchMovie.module.css';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\n function SearchMovies ({onSubmit}) {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const normalizedQuery = value.trim().toLowerCase();\n    if (!normalizedQuery) {\n      toast.warning('The query is empty! Try again.');\n      return;\n    }\n    onSubmit(normalizedQuery);\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const clearInput = () => {\n    setValue('');\n  };\n\n  return (\n    <header className={css.searchbar}>\n      <form onSubmit={handleSubmit} className={css.searchForm}>\n        {' '}\n        <button\n          type=\"button\"\n          className={css.searchFormButton}\n          onClick={clearInput}\n        >\n         üóëÔ∏è\n          \n        </button>\n        <button type=\"submit\" className={css.searchFormButton}>\n        üîç \n        </button>\n        <input\n          className={css.searchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={value}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\nSearchMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default SearchMovies;","import MovieList from 'components/MovieList/MovieList';\nimport SearchMovies from 'components/SearchMovie/SearchMovie';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchByQuery } from 'utils/Api';\n\nfunction Movies() {\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieToSearch = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieToSearch) return;\n\n    fetchByQuery(movieToSearch).then(data => setSearchedMovies(data.results));\n  }, [movieToSearch]);\n\n  const handleSubmit = async newQuery => {\n    setSearchParams({ query: newQuery });\n  };\n\n  return (\n    <>\n      <header>\n        <SearchMovies onSubmit={handleSubmit} />\n      </header>\n      <main>{searchedMovies && <MovieList movies={searchedMovies} />}</main>\n    </>\n  );\n}\nexport default Movies;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0fd779472876e4af22673aa006824d25',\n  },\n});\n\nexport const getTrending = async () => {\n  try {\n    const { data } = await instance.get('/trending/movie/day', {});\n    return data.results;\n  } catch (error) {\n    toast.warning('OOPS');\n    return error.message;\n  }\n};\nexport const fetchByQuery = async query => {\n  try {\n    const { data } = await instance.get(`/search/movie`, {\n      params: { language: 'en-US', page: 1, include_adult: false, query },\n    });\n    console.log(data.results);\n    return data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}`, {\n      params: { language: 'en-US' },\n    });\n    console.log(data);\n    return data;\n  \n  } catch (error) {\n    return error.message;\n    \n  }\n};\nexport const fetchMovieReviews = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`, {\n      params: { language: 'en-US' },\n    });\n    return data.results;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const fetchMovieCredits = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`, {\n      params: { language: 'en-US' },\n    });\n    return data.cast;\n  } catch (error) {\n    return error.message;\n  }\n};\n"],"names":["movies","location","useLocation","console","log","className","css","map","movie","to","id","state","from","poster_path","alt","original_title","src","noMovieImg","title","onSubmit","useState","value","setValue","e","preventDefault","normalizedQuery","trim","toLowerCase","toast","type","onClick","autoComplete","autoFocus","placeholder","onChange","target","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","movieToSearch","get","useEffect","fetchByQuery","then","data","results","handleSubmit","newQuery","query","SearchMovie","MovieList","instance","axios","baseURL","params","api_key","getTrending","message","language","page","include_adult","fetchMovieDetails","fetchMovieReviews","fetchMovieCredits","cast"],"sourceRoot":""}