{"version":3,"file":"static/js/986.53e1073a.chunk.js","mappings":"yMACA,GAAgB,KAAO,4B,2BCgDvB,MA3CA,WACE,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,IAJAC,EAAAA,EAAAA,YAAU,WACHL,IACLM,EAAAA,EAAAA,IAAkBN,GAAIO,MAAK,SAAAJ,GAAI,OAAIC,EAAQD,EAAZ,GAChC,GAAE,CAACH,IACCG,EAEL,OACE,iCACE,mBACA,eAAIK,UAAWC,EAAAA,KAAf,SACGN,GACCA,EAAKO,KAAI,SAAAC,GACP,OACE,gBAAIH,UAAWC,EAAAA,KAAf,UACGE,EAAKC,cACJ,gBACEJ,UAAWC,EAAAA,QACXI,IAAKF,EAAKG,KACVC,IAAG,wCAAmCJ,EAAKC,iBAG7C,gBACEJ,UAAWC,EAAAA,QACXI,IAAKF,EAAKG,KACVC,I,0iYACAC,MAAM,WAGV,uBAAIL,EAAKG,QACT,0BACE,yCADF,IAC2BH,EAAKM,eAjBJN,EAAKX,GAqBtC,QAIV,C,wMC7CKkB,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,+GAEAL,EAASM,IAAI,sBAAuB,CAAC,GAFrC,uBAEfC,EAFe,EAEfA,KAFe,kBAGhBA,EAAKC,SAHW,uCAKvBC,EAAAA,GAAAA,QAAc,QALS,kBAMhB,KAAMC,SANU,yDAAH,qDASXC,EAAY,mCAAG,WAAMC,GAAN,kGAEDZ,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CAAEU,SAAU,QAASC,KAAM,EAAGC,eAAe,EAAOH,MAAAA,KAHtC,uBAEhBL,EAFgB,EAEhBA,KAGRS,QAAQC,IAAIV,EAAKC,SALO,kBAMjBD,GANiB,yDAQjB,KAAMG,SARW,yDAAH,sDAYZQ,EAAiB,mCAAG,WAAMpC,GAAN,kGAENkB,EAASM,IAAT,iBAAuBxB,GAAM,CAClDqB,OAAQ,CAAEU,SAAU,WAHO,uBAErBN,EAFqB,EAErBA,KAGRS,QAAQC,IAAIV,GALiB,kBAMtBA,GANsB,yDAStB,KAAMG,SATgB,yDAAH,sDAajBS,EAAiB,mCAAG,WAAMrC,GAAN,kGAENkB,EAASM,IAAT,iBAAuBxB,EAAvB,YAAqC,CAC1DqB,OAAQ,CAAEU,SAAU,WAHO,uBAErBN,EAFqB,EAErBA,KAFqB,kBAKtBA,EAAKC,SALiB,yDAOtB,KAAME,SAPgB,yDAAH,sDAUjBtB,EAAiB,mCAAG,WAAMN,GAAN,kGAENkB,EAASM,IAAT,iBAAuBxB,EAAvB,YAAqC,CAC1DqB,OAAQ,CAAEU,SAAU,WAHO,uBAErBN,EAFqB,EAErBA,KAFqB,kBAKtBA,EAAKtB,MALiB,yDAOtB,KAAMyB,SAPgB,yDAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCredits/movieCredits.module.css?1867","components/MovieCredits/MovieCredits.jsx","utils/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"movieCredits_cast__iPfJi\"};","import { useEffect, useState } from 'react';\nimport css from './movieCredits.module.css';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'utils/Api';\nimport userImg from 'img/user.jpg';\n\nfunction MovieCredits() {\n  const { id } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    if (!id) return;\n    fetchMovieCredits(id).then(cast => setCast(cast));\n  }, [id]);\n  if (!cast) return;\n\n  return (\n    <>\n      <hr />\n      <ul className={css.cast}>\n        {cast &&\n          cast.map(item => {\n            return (\n              <li className={css.item} key={item.id}>\n                {item.profile_path ? (\n                  <img\n                    className={css.listImg}\n                    alt={item.name}\n                    src={`https://image.tmdb.org/t/p/w92${item.profile_path}`}\n                  />\n                ) : (\n                  <img\n                    className={css.listImg}\n                    alt={item.name}\n                    src={userImg}\n                    width=\"130px\"\n                  />\n                )}\n                <p>{item.name}</p>\n                <p>\n                  <span>Character:</span> {item.character}\n                </p>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n}\nexport default MovieCredits;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0fd779472876e4af22673aa006824d25',\n  },\n});\n\nexport const getTrending = async () => {\n  try {\n    const { data } = await instance.get('/trending/movie/day', {});\n    return data.results;\n  } catch (error) {\n    toast.warning('OOPS');\n    return error.message;\n  }\n};\nexport const fetchByQuery = async query => {\n  try {\n    const { data } = await instance.get(`/search/movie`, {\n      params: { language: 'en-US', page: 1, include_adult: false, query },\n    });\n    console.log(data.results);\n    return data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}`, {\n      params: { language: 'en-US' },\n    });\n    console.log(data);\n    return data;\n  \n  } catch (error) {\n    return error.message;\n    \n  }\n};\nexport const fetchMovieReviews = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`, {\n      params: { language: 'en-US' },\n    });\n    return data.results;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const fetchMovieCredits = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`, {\n      params: { language: 'en-US' },\n    });\n    return data.cast;\n  } catch (error) {\n    return error.message;\n  }\n};\n"],"names":["id","useParams","useState","cast","setCast","useEffect","fetchMovieCredits","then","className","css","map","item","profile_path","alt","name","src","width","character","instance","axios","baseURL","params","api_key","getTrending","get","data","results","toast","message","fetchByQuery","query","language","page","include_adult","console","log","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}