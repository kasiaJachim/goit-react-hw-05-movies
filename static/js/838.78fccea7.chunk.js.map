{"version":3,"file":"static/js/838.78fccea7.chunk.js","mappings":"8LAsCA,UAlCA,WACE,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACHL,IAELM,EAAAA,EAAAA,IAAkBN,GAAIO,MAAK,SAAAJ,GAAO,OAAIC,EAAWD,EAAf,GACnC,GAAE,CAACH,IACmB,IAAnBG,EAAQK,QACH,uCAGP,4BACE,kBACCL,EAAQK,OAAS,GAChB,+BACE,wBACGL,EAAQM,KAAI,SAAAC,GACX,OACE,2BACE,wBAAKA,EAAKC,UACV,uBAAID,EAAKE,YAFFF,EAAKV,GAKjB,SAIL,uDAIP,C,wMClCKa,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,+GAEAL,EAASM,IAAI,sBAAuB,CAAC,GAFrC,uBAEfC,EAFe,EAEfA,KAFe,kBAGhBA,EAAKC,SAHW,uCAKvBC,EAAAA,GAAAA,QAAc,QALS,kBAMhB,KAAMC,SANU,yDAAH,qDASXC,EAAY,mCAAG,WAAMC,GAAN,kGAEDZ,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CAAEU,SAAU,QAASC,KAAM,EAAGC,eAAe,EAAOH,MAAAA,KAHtC,uBAEhBL,EAFgB,EAEhBA,KAGRS,QAAQC,IAAIV,EAAKC,SALO,kBAMjBD,GANiB,yDAQjB,KAAMG,SARW,yDAAH,sDAYZQ,EAAiB,mCAAG,WAAM/B,GAAN,kGAENa,EAASM,IAAT,iBAAuBnB,GAAM,CAClDgB,OAAQ,CAAEU,SAAU,WAHO,uBAErBN,EAFqB,EAErBA,KAGRS,QAAQC,IAAIV,GALiB,kBAMtBA,GANsB,yDAStB,KAAMG,SATgB,yDAAH,sDAajBjB,EAAiB,mCAAG,WAAMN,GAAN,kGAENa,EAASM,IAAT,iBAAuBnB,EAAvB,YAAqC,CAC1DgB,OAAQ,CAAEU,SAAU,WAHO,uBAErBN,EAFqB,EAErBA,KAFqB,kBAKtBA,EAAKC,SALiB,yDAOtB,KAAME,SAPgB,yDAAH,sDAUjBS,EAAiB,mCAAG,WAAMhC,GAAN,kGAENa,EAASM,IAAT,iBAAuBnB,EAAvB,YAAqC,CAC1DgB,OAAQ,CAAEU,SAAU,WAHO,uBAErBN,EAFqB,EAErBA,KAFqB,kBAKtBA,EAAKa,MALiB,yDAOtB,KAAMV,SAPgB,yDAAH,qD","sources":["components/MovieReviews/MovieReviews.jsx","utils/Api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'utils/Api';\n\nfunction MovieReviews() {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!id) return;\n\n    fetchMovieReviews(id).then(reviews => setReviews(reviews));\n  }, [id]);\n  if (reviews.length === 0) {\n    return <p>No results</p>;\n  }\n  return (\n    <div>\n      <hr />\n      {reviews.length > 0 ? (\n        <>\n          <ul>\n            {reviews.map(item => {\n              return (\n                <li key={item.id}>\n                  <h3>{item.author}</h3>\n                  <p>{item.content}</p>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      ) : (\n        <h3>There are no reviews yet</h3>\n      )}\n    </div>\n  );\n}\nexport default MovieReviews;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0fd779472876e4af22673aa006824d25',\n  },\n});\n\nexport const getTrending = async () => {\n  try {\n    const { data } = await instance.get('/trending/movie/day', {});\n    return data.results;\n  } catch (error) {\n    toast.warning('OOPS');\n    return error.message;\n  }\n};\nexport const fetchByQuery = async query => {\n  try {\n    const { data } = await instance.get(`/search/movie`, {\n      params: { language: 'en-US', page: 1, include_adult: false, query },\n    });\n    console.log(data.results);\n    return data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}`, {\n      params: { language: 'en-US' },\n    });\n    console.log(data);\n    return data;\n  \n  } catch (error) {\n    return error.message;\n    \n  }\n};\nexport const fetchMovieReviews = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`, {\n      params: { language: 'en-US' },\n    });\n    return data.results;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const fetchMovieCredits = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`, {\n      params: { language: 'en-US' },\n    });\n    return data.cast;\n  } catch (error) {\n    return error.message;\n  }\n};\n"],"names":["id","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","length","map","item","author","content","instance","axios","baseURL","params","api_key","getTrending","get","data","results","toast","message","fetchByQuery","query","language","page","include_adult","console","log","fetchMovieDetails","fetchMovieCredits","cast"],"sourceRoot":""}