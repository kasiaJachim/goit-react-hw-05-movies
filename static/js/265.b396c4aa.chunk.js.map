{"version":3,"file":"static/js/265.b396c4aa.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/movieDetails.module.css?f136","components/MovieDetails/MovieDetail.jsx","utils/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"movieDetails_wrapper__3JKfA\",\"container\":\"movieDetails_container__DMXsQ\",\"title\":\"movieDetails_title__zhbPy\"};","import css from './movieDetails.module.css'\nimport {  Suspense, useEffect, useState } from 'react';\nimport { fetchMovieDetails } from 'utils/Api';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport noMovieImg from 'img/no-poster-available.jpg';\n\nfunction MovieDetails() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!id) return;\n\n    fetchMovieDetails(id).then(details => setMovie(details));\n  }, [id]);\n  if (!movie) {\n    return null;\n  }\n\nconst backLink = location.state?.from ?? '/movies';\n\n  return (\n    <main>\n      <button>\n        <Link to={backLink}>Go Back</Link>\n      </button>\n      <div className={css.wrapper}>\n        {movie && (\n          <div className={css.container}>\n             <div className={css.imgWrap}>\n            {movie.poster_path ? (\n              <img\n                className={css.img}\n                alt={movie.original_title}\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              />\n            ) : (\n              <img className={css.img} src={noMovieImg} alt=\"not available\" />\n            )}\n</div>\n            <div>\n              <div className={css.title}>\n                <h2>{movie.title}</h2>\n                <p>({parseInt(movie.release_date)})</p>\n              </div>\n              <p>User Score: {~~(movie.vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p>{`${movie.overview}`}</p>\n              <h3>Genres</h3>\n              <p>{`${movie.genres\n                .map(genre => genre.name)\n                .join(' / ')}`}</p>\n            </div>\n          </div>\n        )}\n        <hr />\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <NavLink\n              style={({ isActive }) => ({\n                color: isActive ? '#b92121' : 'inherit',\n              })}\n              to=\"cast\"\n              state={{ from: backLink }}\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              style={({ isActive }) => ({\n                color: isActive ? '#b92121' : 'inherit',\n              })}\n              to=\"reviews\"\n              state={{ from: backLink }}\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </main>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0fd779472876e4af22673aa006824d25',\n  },\n});\n\nexport const getTrending = async () => {\n  try {\n    const { data } = await instance.get('/trending/movie/day', {});\n    return data.results;\n  } catch (error) {\n    toast.warning('OOPS');\n    return error.message;\n  }\n};\nexport const fetchByQuery = async query => {\n  try {\n    const { data } = await instance.get(`/search/movie`, {\n      params: { language: 'en-US', page: 1, include_adult: false, query },\n    });\n    console.log(data.results);\n    return data;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}`, {\n      params: { language: 'en-US' },\n    });\n    console.log(data);\n    return data;\n  \n  } catch (error) {\n    return error.message;\n    \n  }\n};\nexport const fetchMovieReviews = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`, {\n      params: { language: 'en-US' },\n    });\n    return data.results;\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const fetchMovieCredits = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`, {\n      params: { language: 'en-US' },\n    });\n    return data.cast;\n  } catch (error) {\n    return error.message;\n  }\n};\n"],"names":["id","useParams","useState","movie","setMovie","location","useLocation","useEffect","fetchMovieDetails","then","details","backLink","state","from","to","className","css","poster_path","alt","original_title","src","noMovieImg","title","parseInt","release_date","vote_average","overview","genres","map","genre","name","join","style","color","isActive","Suspense","fallback","instance","axios","baseURL","params","api_key","getTrending","get","data","results","toast","message","fetchByQuery","query","language","page","include_adult","console","log","fetchMovieReviews","fetchMovieCredits","cast"],"sourceRoot":""}